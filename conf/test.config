/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/tumourevo -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

process {
    resourceLimits = [
        cpus: 4,
        memory: '15.GB',
        time: '1.h'
    ]
}

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

// Input data
// TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
// TODO nf-core: Give any required params for the test so that command line flags are not needed

    input = "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/tumourevo/data/test_samplesheet.csv"

    // Genome references
    genome = "GRCh38"
    fasta = "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/tumourevo/data/REF/FASTA/chr17_genome.fasta"
    filter = true

    drivers_table = "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/tumourevo/data/DRIVER_ANNOTATION/ANNOTATE_DRIVER/Compendium_Cancer_Genes.tsv"

    download_cache_vep = false
    vep_cache = "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/tumourevo/data/REF/VEP/vep.tar.gz"

    vep_genome = "GRCh38"
    vep_cache_version = "110"
    vep_species = "Homo_sapiens"

    mobster_K = 2
    mobster_maxIter = 100
    mobster_samples = 2

    sparsesignatures_K = "2:3"
    sparsesignatures_nmf_runs = "3"
    sparsesignatures_iterations = "10"
    sparsesignatures_max_iterations_lasso = "100"
    sparsesignatures_cross_validation_repetitions = "10"
    sparsesignatures_cross_validation_iterations = "5"
    sparsesignatures_lambda_values_alpha = "c(0.00, 0.01)"
    sparsesignatures_lambda_values_beta = "c(0.01, 0.05)"

    tools = "mobster,viber,pyclone-vi,sparsesignatures"
}
